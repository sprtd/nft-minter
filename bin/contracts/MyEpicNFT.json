{
    "contractName": "MyEpicNFT",
    "abi": [
        {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "approved",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "bool",
                    "name": "approved",
                    "type": "bool"
                }
            ],
            "name": "ApprovalForAll",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "getApproved",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_tokenId",
                    "type": "uint256"
                }
            ],
            "name": "getNFTOwner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "tokenOwner",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                }
            ],
            "name": "isApprovedForAll",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "makeAnEpicNFT",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "ownerOf",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "_data",
                    "type": "bytes"
                }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "internalType": "bool",
                    "name": "approved",
                    "type": "bool"
                }
            ],
            "name": "setApprovalForAll",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes4",
                    "name": "interfaceId",
                    "type": "bytes4"
                }
            ],
            "name": "supportsInterface",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "tokenURI",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getNFTOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"makeAnEpicNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/sprtd/Desktop/buildspace/NFT_proj/epic-nft/contracts/MyEpicNFT.sol\":\"MyEpicNFT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/sprtd/Desktop/buildspace/NFT_proj/epic-nft/contracts/MyEpicNFT.sol\":{\"keccak256\":\"0x4ea73a91afa863700f7891d4c3990d716254aea007fdb1f86a062358ca1e2fc5\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://93c5cd24d575e5b3fb4cae93c6042e4dfb4d9bd7f053a011493677f4d395b2c6\",\"dweb:/ipfs/QmUkt7ExGN6JEHGPRy4nLMMH45XaKsDE9xuqvoZ55tGKtJ\"]},\"/home/sprtd/Desktop/buildspace/NFT_proj/epic-nft/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x7d2b8ba4b256bfcac347991b75242f9bc37f499c5236af50cf09d0b35943dc0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8eeaf6afe00229af4c232ca058bb08b7a24cc3886f0b387159ac49ffd8b5312\",\"dweb:/ipfs/QmdnVKmDDWDvdRr6vtrxy3G6WafqA2TAhUZv1UFMsm4B4r\"]},\"/home/sprtd/Desktop/buildspace/NFT_proj/epic-nft/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf101e8720213560fab41104d53b3cc7ba0456ef3a98455aa7f022391783144a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e7820bcf567e6892d937c3cb10db263a4042e446799bca602535868d822384e\",\"dweb:/ipfs/QmPG2oeDjKncqsEeyYGjAN7CwAJmMgHterXGGnpzhha4z7\"]},\"/home/sprtd/Desktop/buildspace/NFT_proj/epic-nft/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd9517254724276e2e8de3769183c1f738f445f0095c26fd9b86d3c6687e887b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e604bcdcd5e5b2fb299ad09769cde6db19d5aa1929d1b5e939234a0f10d7eb8\",\"dweb:/ipfs/Qmd8hXE3GZfBHuWx3RNiYgFW2ci7KvHtib8DiwzJ2dgo9V\"]},\"/home/sprtd/Desktop/buildspace/NFT_proj/epic-nft/node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x188d038a65a945481cc13fe30db334472dfbed61f7959d4478d05feb6303b1ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7aec4efa22389811ffa393463569410bbca1ecaa551bc94d69020bc9567e9277\",\"dweb:/ipfs/QmPwk5uVSHPQkepebrZSQ9xqgXdPABKqHwJZ2HkzNByLRE\"]},\"/home/sprtd/Desktop/buildspace/NFT_proj/epic-nft/node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xd32fb7f530a914b1083d10a6bed3a586f2451952fec04fe542bcc670a82f7ba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af63ab940a34687c45f0ad84960b048fc5f49330c92ccb422db7822a444733b9\",\"dweb:/ipfs/QmUShaQEu8HS1GjDnsMJQ8jkZEBrecn6NuDZ3pfjY1gVck\"]},\"/home/sprtd/Desktop/buildspace/NFT_proj/epic-nft/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]},\"/home/sprtd/Desktop/buildspace/NFT_proj/epic-nft/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"/home/sprtd/Desktop/buildspace/NFT_proj/epic-nft/node_modules/@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0x78450f4e3b722cce467b21e285f72ce5eaf361e9ba9dd2241a413926246773cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103065051300cd995fd4599ba91188d4071b92175b52f26110e02db091617c0\",\"dweb:/ipfs/QmSyDz67R2HCypDE8Pacn3voVwxw9x17NM66q47YgBnGqc\"]},\"/home/sprtd/Desktop/buildspace/NFT_proj/epic-nft/node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x391d3ba97ab6856a16b225d6ee29617ad15ff00db70f3b4df1ab5ea33aa47c9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d636ba90bbbeed04a1ea7fe9ec2466757e30fd38ba2ca173636dbf69a518735e\",\"dweb:/ipfs/QmQwCB2BHnEuYR22PYt9HkpbgeFDhq4rHmaYqAZbX3WRC7\"]},\"/home/sprtd/Desktop/buildspace/NFT_proj/epic-nft/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"/home/sprtd/Desktop/buildspace/NFT_proj/epic-nft/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"/home/sprtd/Desktop/buildspace/NFT_proj/epic-nft/node_modules/hardhat/console.sol\":{\"keccak256\":\"0x72b6a1d297cd3b033d7c2e4a7e7864934bb767db6453623f1c3082c6534547f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8cb8681076e765c214e0d51cac989325f6b98e315eaae06ee0cbd5a9f084763\",\"dweb:/ipfs/QmNWGHi4zmjxQTYN3NMGnJd49jBT5dE4bxTdWEaDuJrC6N\"]}},\"version\":1}",
    "bytecode": "60806040523480156200001157600080fd5b50604080518082018252600981526814dc5d585c9953919560ba1b60208083019182528351808501909452600684526553515541524560d01b908401528151919291620000619160009162000125565b5080516200007790600190602084019062000125565b505050620000b0604051806040016040528060088152602001674e4654206865726560c01b815250620000b660201b6200099f1760201c565b62000260565b6200010181604051602401620000cd9190620001cb565b60408051601f198184030181529190526020810180516001600160e01b0390811663104c13eb60e21b179091526200010416565b50565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b828054620001339062000223565b90600052602060002090601f016020900481019282620001575760008555620001a2565b82601f106200017257805160ff1916838001178555620001a2565b82800160010185558215620001a2579182015b82811115620001a257825182559160200191906001019062000185565b50620001b0929150620001b4565b5090565b5b80821115620001b05760008155600101620001b5565b600060208083528351808285015260005b81811015620001fa57858101830151858201604001528201620001dc565b818111156200020d576000604083870101525b50601f01601f1916929092016040019392505050565b600181811c908216806200023857607f821691505b602082108114156200025a57634e487b7160e01b600052602260045260246000fd5b50919050565b6118b880620002706000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063c87b56dd11610066578063c87b56dd146101ff578063de9d132f14610212578063deaea2e31461021a578063e985e9c51461022d57600080fd5b806370a08231146101b057806395d89b41146101d1578063a22cb465146101d9578063b88d4fde146101ec57600080fd5b8063095ea7b3116100d3578063095ea7b31461016257806323b872dd1461017757806342842e0e1461018a5780636352211e1461019d57600080fd5b806301ffc9a7146100fa57806306fdde0314610122578063081812fc14610137575b600080fd5b61010d610108366004611370565b610269565b60405190151581526020015b60405180910390f35b61012a6102bb565b60405161011991906113e5565b61014a6101453660046113f8565b61034d565b6040516001600160a01b039091168152602001610119565b610175610170366004611428565b6103da565b005b610175610185366004611452565b6104f0565b610175610198366004611452565b610521565b61014a6101ab3660046113f8565b61053c565b6101c36101be36600461148e565b6105b3565b604051908152602001610119565b61012a61063a565b6101756101e73660046114a9565b610649565b6101756101fa3660046114fb565b61070e565b61012a61020d3660046113f8565b610746565b6101756108bd565b61014a6102283660046113f8565b61095d565b61010d61023b3660046115d7565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061029a57506001600160e01b03198216635b5e139f60e01b145b806102b557506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102ca9061160a565b80601f01602080910402602001604051908101604052809291908181526020018280546102f69061160a565b80156103435780601f1061031857610100808354040283529160200191610343565b820191906000526020600020905b81548152906001019060200180831161032657829003601f168201915b5050505050905090565b6000610358826109e2565b6103be5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103e58261053c565b9050806001600160a01b0316836001600160a01b031614156104535760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016103b5565b336001600160a01b038216148061046f575061046f813361023b565b6104e15760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016103b5565b6104eb83836109ff565b505050565b6104fa3382610a6d565b6105165760405162461bcd60e51b81526004016103b590611645565b6104eb838383610b53565b6104eb8383836040518060200160405280600081525061070e565b6000818152600260205260408120546001600160a01b0316806102b55760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016103b5565b60006001600160a01b03821661061e5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016103b5565b506001600160a01b031660009081526003602052604090205490565b6060600180546102ca9061160a565b6001600160a01b0382163314156106a25760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103b5565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6107183383610a6d565b6107345760405162461bcd60e51b81526004016103b590611645565b61074084848484610cf3565b50505050565b6060610751826109e2565b6107b75760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b60648201526084016103b5565b600082815260066020526040812080546107d09061160a565b80601f01602080910402602001604051908101604052809291908181526020018280546107fc9061160a565b80156108495780601f1061081e57610100808354040283529160200191610849565b820191906000526020600020905b81548152906001019060200180831161082c57829003601f168201915b50505050509050600061086760408051602081019091526000815290565b905080516000141561087a575092915050565b8151156108ac578082604051602001610894929190611696565b60405160208183030381529060405292505050919050565b6108b584610d26565b949350505050565b60006108c860075490565b90506108d43382610dfe565b610913816040518060400160405280601d81526020017f68747470733a2f2f6a736f6e6b65657065722e636f6d2f622f39523445000000815250610e1c565b61094c604051806040016040528060168152602001754e4654206964202573206d696e74656420627920257360501b8152508233610ea7565b61095a600780546001019055565b50565b60006109688261053c565b905061099a6040518060400160405280600e81526020016d12b9903a37b5b2b71037bbb732b960911b81525082610eee565b919050565b61095a816040516024016109b391906113e5565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052610f2f565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610a348261053c565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610a78826109e2565b610ad95760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016103b5565b6000610ae48361053c565b9050806001600160a01b0316846001600160a01b03161480610b1f5750836001600160a01b0316610b148461034d565b6001600160a01b0316145b806108b557506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff166108b5565b826001600160a01b0316610b668261053c565b6001600160a01b031614610bce5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016103b5565b6001600160a01b038216610c305760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103b5565b610c3b6000826109ff565b6001600160a01b0383166000908152600360205260408120805460019290610c649084906116db565b90915550506001600160a01b0382166000908152600360205260408120805460019290610c929084906116f2565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610cfe848484610b53565b610d0a84848484610f50565b6107405760405162461bcd60e51b81526004016103b59061170a565b6060610d31826109e2565b610d955760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016103b5565b6000610dac60408051602081019091526000815290565b90506000815111610dcc5760405180602001604052806000815250610df7565b80610dd68461105d565b604051602001610de7929190611696565b6040516020818303038152906040525b9392505050565b610e1882826040518060200160405280600081525061115b565b5050565b610e25826109e2565b610e885760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016103b5565b600082815260066020908152604090912082516104eb928401906112c1565b6104eb838383604051602401610ebf9392919061175c565b60408051601f198184030181529190526020810180516001600160e01b031663e3849f7960e01b179052610f2f565b610e188282604051602401610f0492919061178f565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b1790525b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60006001600160a01b0384163b1561105257604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610f949033908990889088906004016117b9565b602060405180830381600087803b158015610fae57600080fd5b505af1925050508015610fde575060408051601f3d908101601f19168201909252610fdb918101906117f6565b60015b611038573d80801561100c576040519150601f19603f3d011682016040523d82523d6000602084013e611011565b606091505b5080516110305760405162461bcd60e51b81526004016103b59061170a565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506108b5565b506001949350505050565b6060816110815750506040805180820190915260018152600360fc1b602082015290565b8160005b81156110ab578061109581611813565b91506110a49050600a83611844565b9150611085565b60008167ffffffffffffffff8111156110c6576110c66114e5565b6040519080825280601f01601f1916602001820160405280156110f0576020820181803683370190505b5090505b84156108b5576111056001836116db565b9150611112600a86611858565b61111d9060306116f2565b60f81b8183815181106111325761113261186c565b60200101906001600160f81b031916908160001a905350611154600a86611844565b94506110f4565b611165838361118e565b6111726000848484610f50565b6104eb5760405162461bcd60e51b81526004016103b59061170a565b6001600160a01b0382166111e45760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103b5565b6111ed816109e2565b1561123a5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103b5565b6001600160a01b03821660009081526003602052604081208054600192906112639084906116f2565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b8280546112cd9061160a565b90600052602060002090601f0160209004810192826112ef5760008555611335565b82601f1061130857805160ff1916838001178555611335565b82800160010185558215611335579182015b8281111561133557825182559160200191906001019061131a565b50611341929150611345565b5090565b5b808211156113415760008155600101611346565b6001600160e01b03198116811461095a57600080fd5b60006020828403121561138257600080fd5b8135610df78161135a565b60005b838110156113a8578181015183820152602001611390565b838111156107405750506000910152565b600081518084526113d181602086016020860161138d565b601f01601f19169290920160200192915050565b602081526000610df760208301846113b9565b60006020828403121561140a57600080fd5b5035919050565b80356001600160a01b038116811461099a57600080fd5b6000806040838503121561143b57600080fd5b61144483611411565b946020939093013593505050565b60008060006060848603121561146757600080fd5b61147084611411565b925061147e60208501611411565b9150604084013590509250925092565b6000602082840312156114a057600080fd5b610df782611411565b600080604083850312156114bc57600080fd5b6114c583611411565b9150602083013580151581146114da57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561151157600080fd5b61151a85611411565b935061152860208601611411565b925060408501359150606085013567ffffffffffffffff8082111561154c57600080fd5b818701915087601f83011261156057600080fd5b813581811115611572576115726114e5565b604051601f8201601f19908116603f0116810190838211818310171561159a5761159a6114e5565b816040528281528a60208487010111156115b357600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156115ea57600080fd5b6115f383611411565b915061160160208401611411565b90509250929050565b600181811c9082168061161e57607f821691505b6020821081141561163f57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600083516116a881846020880161138d565b8351908301906116bc81836020880161138d565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156116ed576116ed6116c5565b500390565b60008219821115611705576117056116c5565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60608152600061176f60608301866113b9565b6020830194909452506001600160a01b0391909116604090910152919050565b6040815260006117a260408301856113b9565b905060018060a01b03831660208301529392505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906117ec908301846113b9565b9695505050505050565b60006020828403121561180857600080fd5b8151610df78161135a565b6000600019821415611827576118276116c5565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826118535761185361182e565b500490565b6000826118675761186761182e565b500690565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220cf9875132c0a936ec482da8c35d404df014cad3977858a0a25e3b600938f810e64736f6c63430008080033",
    "deployedBytecode": "608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063c87b56dd11610066578063c87b56dd146101ff578063de9d132f14610212578063deaea2e31461021a578063e985e9c51461022d57600080fd5b806370a08231146101b057806395d89b41146101d1578063a22cb465146101d9578063b88d4fde146101ec57600080fd5b8063095ea7b3116100d3578063095ea7b31461016257806323b872dd1461017757806342842e0e1461018a5780636352211e1461019d57600080fd5b806301ffc9a7146100fa57806306fdde0314610122578063081812fc14610137575b600080fd5b61010d610108366004611370565b610269565b60405190151581526020015b60405180910390f35b61012a6102bb565b60405161011991906113e5565b61014a6101453660046113f8565b61034d565b6040516001600160a01b039091168152602001610119565b610175610170366004611428565b6103da565b005b610175610185366004611452565b6104f0565b610175610198366004611452565b610521565b61014a6101ab3660046113f8565b61053c565b6101c36101be36600461148e565b6105b3565b604051908152602001610119565b61012a61063a565b6101756101e73660046114a9565b610649565b6101756101fa3660046114fb565b61070e565b61012a61020d3660046113f8565b610746565b6101756108bd565b61014a6102283660046113f8565b61095d565b61010d61023b3660046115d7565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061029a57506001600160e01b03198216635b5e139f60e01b145b806102b557506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102ca9061160a565b80601f01602080910402602001604051908101604052809291908181526020018280546102f69061160a565b80156103435780601f1061031857610100808354040283529160200191610343565b820191906000526020600020905b81548152906001019060200180831161032657829003601f168201915b5050505050905090565b6000610358826109e2565b6103be5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103e58261053c565b9050806001600160a01b0316836001600160a01b031614156104535760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016103b5565b336001600160a01b038216148061046f575061046f813361023b565b6104e15760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016103b5565b6104eb83836109ff565b505050565b6104fa3382610a6d565b6105165760405162461bcd60e51b81526004016103b590611645565b6104eb838383610b53565b6104eb8383836040518060200160405280600081525061070e565b6000818152600260205260408120546001600160a01b0316806102b55760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016103b5565b60006001600160a01b03821661061e5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016103b5565b506001600160a01b031660009081526003602052604090205490565b6060600180546102ca9061160a565b6001600160a01b0382163314156106a25760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103b5565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6107183383610a6d565b6107345760405162461bcd60e51b81526004016103b590611645565b61074084848484610cf3565b50505050565b6060610751826109e2565b6107b75760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b60648201526084016103b5565b600082815260066020526040812080546107d09061160a565b80601f01602080910402602001604051908101604052809291908181526020018280546107fc9061160a565b80156108495780601f1061081e57610100808354040283529160200191610849565b820191906000526020600020905b81548152906001019060200180831161082c57829003601f168201915b50505050509050600061086760408051602081019091526000815290565b905080516000141561087a575092915050565b8151156108ac578082604051602001610894929190611696565b60405160208183030381529060405292505050919050565b6108b584610d26565b949350505050565b60006108c860075490565b90506108d43382610dfe565b610913816040518060400160405280601d81526020017f68747470733a2f2f6a736f6e6b65657065722e636f6d2f622f39523445000000815250610e1c565b61094c604051806040016040528060168152602001754e4654206964202573206d696e74656420627920257360501b8152508233610ea7565b61095a600780546001019055565b50565b60006109688261053c565b905061099a6040518060400160405280600e81526020016d12b9903a37b5b2b71037bbb732b960911b81525082610eee565b919050565b61095a816040516024016109b391906113e5565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052610f2f565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610a348261053c565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610a78826109e2565b610ad95760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016103b5565b6000610ae48361053c565b9050806001600160a01b0316846001600160a01b03161480610b1f5750836001600160a01b0316610b148461034d565b6001600160a01b0316145b806108b557506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff166108b5565b826001600160a01b0316610b668261053c565b6001600160a01b031614610bce5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016103b5565b6001600160a01b038216610c305760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103b5565b610c3b6000826109ff565b6001600160a01b0383166000908152600360205260408120805460019290610c649084906116db565b90915550506001600160a01b0382166000908152600360205260408120805460019290610c929084906116f2565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610cfe848484610b53565b610d0a84848484610f50565b6107405760405162461bcd60e51b81526004016103b59061170a565b6060610d31826109e2565b610d955760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016103b5565b6000610dac60408051602081019091526000815290565b90506000815111610dcc5760405180602001604052806000815250610df7565b80610dd68461105d565b604051602001610de7929190611696565b6040516020818303038152906040525b9392505050565b610e1882826040518060200160405280600081525061115b565b5050565b610e25826109e2565b610e885760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016103b5565b600082815260066020908152604090912082516104eb928401906112c1565b6104eb838383604051602401610ebf9392919061175c565b60408051601f198184030181529190526020810180516001600160e01b031663e3849f7960e01b179052610f2f565b610e188282604051602401610f0492919061178f565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b1790525b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60006001600160a01b0384163b1561105257604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610f949033908990889088906004016117b9565b602060405180830381600087803b158015610fae57600080fd5b505af1925050508015610fde575060408051601f3d908101601f19168201909252610fdb918101906117f6565b60015b611038573d80801561100c576040519150601f19603f3d011682016040523d82523d6000602084013e611011565b606091505b5080516110305760405162461bcd60e51b81526004016103b59061170a565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506108b5565b506001949350505050565b6060816110815750506040805180820190915260018152600360fc1b602082015290565b8160005b81156110ab578061109581611813565b91506110a49050600a83611844565b9150611085565b60008167ffffffffffffffff8111156110c6576110c66114e5565b6040519080825280601f01601f1916602001820160405280156110f0576020820181803683370190505b5090505b84156108b5576111056001836116db565b9150611112600a86611858565b61111d9060306116f2565b60f81b8183815181106111325761113261186c565b60200101906001600160f81b031916908160001a905350611154600a86611844565b94506110f4565b611165838361118e565b6111726000848484610f50565b6104eb5760405162461bcd60e51b81526004016103b59061170a565b6001600160a01b0382166111e45760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103b5565b6111ed816109e2565b1561123a5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103b5565b6001600160a01b03821660009081526003602052604081208054600192906112639084906116f2565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b8280546112cd9061160a565b90600052602060002090601f0160209004810192826112ef5760008555611335565b82601f1061130857805160ff1916838001178555611335565b82800160010185558215611335579182015b8281111561133557825182559160200191906001019061131a565b50611341929150611345565b5090565b5b808211156113415760008155600101611346565b6001600160e01b03198116811461095a57600080fd5b60006020828403121561138257600080fd5b8135610df78161135a565b60005b838110156113a8578181015183820152602001611390565b838111156107405750506000910152565b600081518084526113d181602086016020860161138d565b601f01601f19169290920160200192915050565b602081526000610df760208301846113b9565b60006020828403121561140a57600080fd5b5035919050565b80356001600160a01b038116811461099a57600080fd5b6000806040838503121561143b57600080fd5b61144483611411565b946020939093013593505050565b60008060006060848603121561146757600080fd5b61147084611411565b925061147e60208501611411565b9150604084013590509250925092565b6000602082840312156114a057600080fd5b610df782611411565b600080604083850312156114bc57600080fd5b6114c583611411565b9150602083013580151581146114da57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561151157600080fd5b61151a85611411565b935061152860208601611411565b925060408501359150606085013567ffffffffffffffff8082111561154c57600080fd5b818701915087601f83011261156057600080fd5b813581811115611572576115726114e5565b604051601f8201601f19908116603f0116810190838211818310171561159a5761159a6114e5565b816040528281528a60208487010111156115b357600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156115ea57600080fd5b6115f383611411565b915061160160208401611411565b90509250929050565b600181811c9082168061161e57607f821691505b6020821081141561163f57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600083516116a881846020880161138d565b8351908301906116bc81836020880161138d565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156116ed576116ed6116c5565b500390565b60008219821115611705576117056116c5565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60608152600061176f60608301866113b9565b6020830194909452506001600160a01b0391909116604090910152919050565b6040815260006117a260408301856113b9565b905060018060a01b03831660208301529392505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906117ec908301846113b9565b9695505050505050565b60006020828403121561180857600080fd5b8151610df78161135a565b6000600019821415611827576118276116c5565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826118535761185361182e565b500490565b6000826118675761186761182e565b500690565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220cf9875132c0a936ec482da8c35d404df014cad3977858a0a25e3b600938f810e64736f6c63430008080033",
    "sourceMap": "414:653:0:-:0;;;535:79;;;;;;;;;-1:-1:-1;1316:113:1;;;;;;;;;;;-1:-1:-1;;;1316:113:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1316:113:1;;;;1382:13;;1316:113;;;1382:13;;-1:-1:-1;;1382:13:1;:::i;:::-;-1:-1:-1;1405:17:1;;;;:7;;:17;;;;;:::i;:::-;;1316:113;;585:23:0::1;;;;;;;;;;;;;;-1:-1:-1::0;;;585:23:0::1;;::::0;:11:::1;;;;;:23;;:::i;:::-;414:653:::0;;5054:112:12;5103:59;5158:2;5119:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5119:42:12;;;;;;;;;;;;;;-1:-1:-1;;;;;5119:42:12;;;-1:-1:-1;;;5119:42:12;;;;5103:15;:59;:::i;:::-;5054:112;:::o;176:288::-;264:14;;129:42;373:2;360:16;;240:21;;264:14;360:16;129:42;400:5;389:68;380:77;;335:126;;176:288;:::o;414:653:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;414:653:0;;;-1:-1:-1;414:653:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:597:13;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:13;574:15;-1:-1:-1;;570:29:13;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:13:o;616:380::-;695:1;691:12;;;;738;;;759:61;;813:4;805:6;801:17;791:27;;759:61;866:2;858:6;855:14;835:18;832:38;829:161;;;912:10;907:3;903:20;900:1;893:31;947:4;944:1;937:15;975:4;972:1;965:15;829:161;;616:380;;;:::o;:::-;414:653:0;;;;;;",
    "deployedSourceMap": "414:653:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1496:300:1;;;;;;:::i;:::-;;:::i;:::-;;;565:14:13;;558:22;540:41;;528:2;513:18;1496:300:1;;;;;;;;2414:98;;;:::i;:::-;;;;;;;:::i;3925:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:13;;;1674:51;;1662:2;1647:18;3925:217:1;1528:203:13;3463:401:1;;;;;;:::i;:::-;;:::i;:::-;;4789:330;;;;;;:::i;:::-;;:::i;5185:179::-;;;;;;:::i;:::-;;:::i;2117:235::-;;;;;;:::i;:::-;;:::i;1855:205::-;;;;;;:::i;:::-;;:::i;:::-;;;2843:25:13;;;2831:2;2816:18;1855:205:1;2697:177:13;2576:102:1;;;:::i;4209:290::-;;;;;;:::i;:::-;;:::i;5430:320::-;;;;;;:::i;:::-;;:::i;387:663:4:-;;;;;;:::i;:::-;;:::i;618:276:0:-;;;:::i;899:164::-;;;;;;:::i;:::-;;:::i;4565:162:1:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4685:25:1;;;4662:4;4685:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4565:162;1496:300;1598:4;-1:-1:-1;;;;;;1633:40:1;;-1:-1:-1;;;1633:40:1;;:104;;-1:-1:-1;;;;;;;1689:48:1;;-1:-1:-1;;;1689:48:1;1633:104;:156;;;-1:-1:-1;;;;;;;;;;871:40:10;;;1753:36:1;1614:175;1496:300;-1:-1:-1;;1496:300:1:o;2414:98::-;2468:13;2500:5;2493:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2414:98;:::o;3925:217::-;4001:7;4028:16;4036:7;4028;:16::i;:::-;4020:73;;;;-1:-1:-1;;;4020:73:1;;5358:2:13;4020:73:1;;;5340:21:13;5397:2;5377:18;;;5370:30;5436:34;5416:18;;;5409:62;-1:-1:-1;;;5487:18:13;;;5480:42;5539:19;;4020:73:1;;;;;;;;;-1:-1:-1;4111:24:1;;;;:15;:24;;;;;;-1:-1:-1;;;;;4111:24:1;;3925:217::o;3463:401::-;3543:13;3559:23;3574:7;3559:14;:23::i;:::-;3543:39;;3606:5;-1:-1:-1;;;;;3600:11:1;:2;-1:-1:-1;;;;;3600:11:1;;;3592:57;;;;-1:-1:-1;;;3592:57:1;;5771:2:13;3592:57:1;;;5753:21:13;5810:2;5790:18;;;5783:30;5849:34;5829:18;;;5822:62;-1:-1:-1;;;5900:18:13;;;5893:31;5941:19;;3592:57:1;5569:397:13;3592:57:1;666:10:7;-1:-1:-1;;;;;3681:21:1;;;;:62;;-1:-1:-1;3706:37:1;3723:5;666:10:7;4565:162:1;:::i;3706:37::-;3660:165;;;;-1:-1:-1;;;3660:165:1;;6173:2:13;3660:165:1;;;6155:21:13;6212:2;6192:18;;;6185:30;6251:34;6231:18;;;6224:62;6322:26;6302:18;;;6295:54;6366:19;;3660:165:1;5971:420:13;3660:165:1;3836:21;3845:2;3849:7;3836:8;:21::i;:::-;3533:331;3463:401;;:::o;4789:330::-;4978:41;666:10:7;5011:7:1;4978:18;:41::i;:::-;4970:103;;;;-1:-1:-1;;;4970:103:1;;;;;;;:::i;:::-;5084:28;5094:4;5100:2;5104:7;5084:9;:28::i;5185:179::-;5318:39;5335:4;5341:2;5345:7;5318:39;;;;;;;;;;;;:16;:39::i;2117:235::-;2189:7;2224:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2224:16:1;2258:19;2250:73;;;;-1:-1:-1;;;2250:73:1;;7016:2:13;2250:73:1;;;6998:21:13;7055:2;7035:18;;;7028:30;7094:34;7074:18;;;7067:62;-1:-1:-1;;;7145:18:13;;;7138:39;7194:19;;2250:73:1;6814:405:13;1855:205:1;1927:7;-1:-1:-1;;;;;1954:19:1;;1946:74;;;;-1:-1:-1;;;1946:74:1;;7426:2:13;1946:74:1;;;7408:21:13;7465:2;7445:18;;;7438:30;7504:34;7484:18;;;7477:62;-1:-1:-1;;;7555:18:13;;;7548:40;7605:19;;1946:74:1;7224:406:13;1946:74:1;-1:-1:-1;;;;;;2037:16:1;;;;;:9;:16;;;;;;;1855:205::o;2576:102::-;2632:13;2664:7;2657:14;;;;;:::i;4209:290::-;-1:-1:-1;;;;;4311:24:1;;666:10:7;4311:24:1;;4303:62;;;;-1:-1:-1;;;4303:62:1;;7837:2:13;4303:62:1;;;7819:21:13;7876:2;7856:18;;;7849:30;7915:27;7895:18;;;7888:55;7960:18;;4303:62:1;7635:349:13;4303:62:1;666:10:7;4376:32:1;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;4376:42:1;;;;;;;;;;;;:53;;-1:-1:-1;;4376:53:1;;;;;;;;;;4444:48;;540:41:13;;;4376:42:1;;666:10:7;4444:48:1;;513:18:13;4444:48:1;;;;;;;4209:290;;:::o;5430:320::-;5599:41;666:10:7;5632:7:1;5599:18;:41::i;:::-;5591:103;;;;-1:-1:-1;;;5591:103:1;;;;;;;:::i;:::-;5704:39;5718:4;5724:2;5728:7;5737:5;5704:13;:39::i;:::-;5430:320;;;;:::o;387:663:4:-;460:13;493:16;501:7;493;:16::i;:::-;485:78;;;;-1:-1:-1;;;485:78:4;;8191:2:13;485:78:4;;;8173:21:13;8230:2;8210:18;;;8203:30;8269:34;8249:18;;;8242:62;-1:-1:-1;;;8320:18:13;;;8313:47;8377:19;;485:78:4;7989:413:13;485:78:4;574:23;600:19;;;:10;:19;;;;;574:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;629:18;650:10;3390:9:1;;;;;;;;;-1:-1:-1;3390:9:1;;;3314:92;650:10:4;629:31;;739:4;733:18;755:1;733:23;729:70;;;-1:-1:-1;779:9:4;387:663;-1:-1:-1;;387:663:4:o;729:70::-;901:23;;:27;897:106;;975:4;981:9;958:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;944:48;;;;387:663;;;:::o;897:106::-;1020:23;1035:7;1020:14;:23::i;:::-;1013:30;387:663;-1:-1:-1;;;;387:663:4:o;618:276:0:-;656:17;676:19;:9;864:14:8;;773:112;676:19:0;656:39;;701:32;711:10;723:9;701;:32::i;:::-;739:56;752:9;739:56;;;;;;;;;;;;;;;;;:12;:56::i;:::-;801:60;;;;;;;;;;;;;;-1:-1:-1;;;801:60:0;;;839:9;850:10;801:11;:60::i;:::-;867:21;:9;978:19:8;;996:1;978:19;;;891:123;867:21:0;650:244;618:276::o;899:164::-;955:18;994:17;1002:8;994:7;:17::i;:::-;981:30;;1017:41;;;;;;;;;;;;;;-1:-1:-1;;;1017:41:0;;;1047:10;1017:11;:41::i;:::-;899:164;;;:::o;5054:112:12:-;5103:59;5158:2;5119:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5119:42:12;;;;;;;;;;;;;;-1:-1:-1;;;;;5119:42:12;-1:-1:-1;;;5119:42:12;;;5103:15;:59::i;7222:125:1:-;7287:4;7310:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7310:16:1;:30;;;7222:125::o;11073:171::-;11147:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11147:29:1;-1:-1:-1;;;;;11147:29:1;;;;;;;;:24;;11200:23;11147:24;11200:14;:23::i;:::-;-1:-1:-1;;;;;11191:46:1;;;;;;;;;;;11073:171;;:::o;7505:344::-;7598:4;7622:16;7630:7;7622;:16::i;:::-;7614:73;;;;-1:-1:-1;;;7614:73:1;;9084:2:13;7614:73:1;;;9066:21:13;9123:2;9103:18;;;9096:30;9162:34;9142:18;;;9135:62;-1:-1:-1;;;9213:18:13;;;9206:42;9265:19;;7614:73:1;8882:408:13;7614:73:1;7697:13;7713:23;7728:7;7713:14;:23::i;:::-;7697:39;;7765:5;-1:-1:-1;;;;;7754:16:1;:7;-1:-1:-1;;;;;7754:16:1;;:51;;;;7798:7;-1:-1:-1;;;;;7774:31:1;:20;7786:7;7774:11;:20::i;:::-;-1:-1:-1;;;;;7774:31:1;;7754:51;:87;;;-1:-1:-1;;;;;;4685:25:1;;;4662:4;4685:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7809:32;4565:162;10402:560;10556:4;-1:-1:-1;;;;;10529:31:1;:23;10544:7;10529:14;:23::i;:::-;-1:-1:-1;;;;;10529:31:1;;10521:85;;;;-1:-1:-1;;;10521:85:1;;9497:2:13;10521:85:1;;;9479:21:13;9536:2;9516:18;;;9509:30;9575:34;9555:18;;;9548:62;-1:-1:-1;;;9626:18:13;;;9619:39;9675:19;;10521:85:1;9295:405:13;10521:85:1;-1:-1:-1;;;;;10624:16:1;;10616:65;;;;-1:-1:-1;;;10616:65:1;;9907:2:13;10616:65:1;;;9889:21:13;9946:2;9926:18;;;9919:30;9985:34;9965:18;;;9958:62;-1:-1:-1;;;10036:18:13;;;10029:34;10080:19;;10616:65:1;9705:400:13;10616:65:1;10793:29;10810:1;10814:7;10793:8;:29::i;:::-;-1:-1:-1;;;;;10833:15:1;;;;;;:9;:15;;;;;:20;;10852:1;;10833:15;:20;;10852:1;;10833:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10863:13:1;;;;;;:9;:13;;;;;:18;;10880:1;;10863:13;:18;;10880:1;;10863:18;:::i;:::-;;;;-1:-1:-1;;10891:16:1;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10891:21:1;-1:-1:-1;;;;;10891:21:1;;;;;;;;;10928:27;;10891:16;;10928:27;;;;;;;10402:560;;;:::o;6612:307::-;6763:28;6773:4;6779:2;6783:7;6763:9;:28::i;:::-;6809:48;6832:4;6838:2;6842:7;6851:5;6809:22;:48::i;:::-;6801:111;;;;-1:-1:-1;;;6801:111:1;;;;;;;:::i;2744:329::-;2817:13;2850:16;2858:7;2850;:16::i;:::-;2842:76;;;;-1:-1:-1;;;2842:76:1;;11126:2:13;2842:76:1;;;11108:21:13;11165:2;11145:18;;;11138:30;11204:34;11184:18;;;11177:62;-1:-1:-1;;;11255:18:13;;;11248:45;11310:19;;2842:76:1;10924:411:13;2842:76:1;2929:21;2953:10;3390:9;;;;;;;;;-1:-1:-1;3390:9:1;;;3314:92;2953:10;2929:34;;3004:1;2986:7;2980:21;:25;:86;;;;;;;;;;;;;;;;;3032:7;3041:18;:7;:16;:18::i;:::-;3015:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2980:86;2973:93;2744:329;-1:-1:-1;;;2744:329:1:o;8179:108::-;8254:26;8264:2;8268:7;8254:26;;;;;;;;;;;;:9;:26::i;:::-;8179:108;;:::o;1197:214:4:-;1296:16;1304:7;1296;:16::i;:::-;1288:75;;;;-1:-1:-1;;;1288:75:4;;11542:2:13;1288:75:4;;;11524:21:13;11581:2;11561:18;;;11554:30;11620:34;11600:18;;;11593:62;-1:-1:-1;;;11671:18:13;;;11664:44;11725:19;;1288:75:4;11340:410:13;1288:75:4;1373:19;;;;:10;:19;;;;;;;;:31;;;;;;;;:::i;10311:154:12:-;10381:80;10449:2;10453;10457;10397:63;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;10397:63:12;;;;;;;;;;;;;;-1:-1:-1;;;;;10397:63:12;-1:-1:-1;;;10397:63:12;;;10381:15;:80::i;6298:136::-;6359:71;6422:2;6426;6375:54;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6375:54:12;;;;;;;;;;;;;;-1:-1:-1;;;;;6375:54:12;-1:-1:-1;;;6375:54:12;;;176:288;264:14;;129:42;373:2;360:16;;240:21;;264:14;360:16;129:42;400:5;389:68;380:77;;335:126;;176:288;:::o;11797:778:1:-;11947:4;-1:-1:-1;;;;;11967:13:1;;1034:20:6;1080:8;11963:606:1;;12002:72;;-1:-1:-1;;;12002:72:1;;-1:-1:-1;;;;;12002:36:1;;;;;:72;;666:10:7;;12053:4:1;;12059:7;;12068:5;;12002:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12002:72:1;;;;;;;;-1:-1:-1;;12002:72:1;;;;;;;;;;;;:::i;:::-;;;11998:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12241:13:1;;12237:266;;12283:60;;-1:-1:-1;;;12283:60:1;;;;;;;:::i;12237:266::-;12455:6;12449:13;12440:6;12436:2;12432:15;12425:38;11998:519;-1:-1:-1;;;;;;12124:51:1;-1:-1:-1;;;12124:51:1;;-1:-1:-1;12117:58:1;;11963:606;-1:-1:-1;12554:4:1;11797:778;;;;;;:::o;275:703:9:-;331:13;548:10;544:51;;-1:-1:-1;;574:10:9;;;;;;;;;;;;-1:-1:-1;;;574:10:9;;;;;275:703::o;544:51::-;619:5;604:12;658:75;665:9;;658:75;;690:8;;;;:::i;:::-;;-1:-1:-1;712:10:9;;-1:-1:-1;720:2:9;712:10;;:::i;:::-;;;658:75;;;742:19;774:6;764:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;764:17:9;;742:39;;791:150;798:10;;791:150;;824:11;834:1;824:11;;:::i;:::-;;-1:-1:-1;892:10:9;900:2;892:5;:10;:::i;:::-;879:24;;:2;:24;:::i;:::-;866:39;;849:6;856;849:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;849:56:9;;;;;;;;-1:-1:-1;919:11:9;928:2;919:11;;:::i;:::-;;;791:150;;8508:311:1;8633:18;8639:2;8643:7;8633:5;:18::i;:::-;8682:54;8713:1;8717:2;8721:7;8730:5;8682:22;:54::i;:::-;8661:151;;;;-1:-1:-1;;;8661:151:1;;;;;;;:::i;9141:372::-;-1:-1:-1;;;;;9220:16:1;;9212:61;;;;-1:-1:-1;;;9212:61:1;;14066:2:13;9212:61:1;;;14048:21:13;;;14085:18;;;14078:30;14144:34;14124:18;;;14117:62;14196:18;;9212:61:1;13864:356:13;9212:61:1;9292:16;9300:7;9292;:16::i;:::-;9291:17;9283:58;;;;-1:-1:-1;;;9283:58:1;;14427:2:13;9283:58:1;;;14409:21:13;14466:2;14446:18;;;14439:30;14505;14485:18;;;14478:58;14553:18;;9283:58:1;14225:352:13;9283:58:1;-1:-1:-1;;;;;9408:13:1;;;;;;:9;:13;;;;;:18;;9425:1;;9408:13;:18;;9425:1;;9408:18;:::i;:::-;;;;-1:-1:-1;;9436:16:1;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9436:21:1;-1:-1:-1;;;;;9436:21:1;;;;;;;;9473:33;;9436:16;;;9473:33;;9436:16;;9473:33;9141:372;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:13;-1:-1:-1;;;;;;88:32:13;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:13;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:13;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:13:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:13;;1343:180;-1:-1:-1;1343:180:13:o;1736:173::-;1804:20;;-1:-1:-1;;;;;1853:31:13;;1843:42;;1833:70;;1899:1;1896;1889:12;1914:254;1982:6;1990;2043:2;2031:9;2022:7;2018:23;2014:32;2011:52;;;2059:1;2056;2049:12;2011:52;2082:29;2101:9;2082:29;:::i;:::-;2072:39;2158:2;2143:18;;;;2130:32;;-1:-1:-1;;;1914:254:13:o;2173:328::-;2250:6;2258;2266;2319:2;2307:9;2298:7;2294:23;2290:32;2287:52;;;2335:1;2332;2325:12;2287:52;2358:29;2377:9;2358:29;:::i;:::-;2348:39;;2406:38;2440:2;2429:9;2425:18;2406:38;:::i;:::-;2396:48;;2491:2;2480:9;2476:18;2463:32;2453:42;;2173:328;;;;;:::o;2506:186::-;2565:6;2618:2;2606:9;2597:7;2593:23;2589:32;2586:52;;;2634:1;2631;2624:12;2586:52;2657:29;2676:9;2657:29;:::i;2879:347::-;2944:6;2952;3005:2;2993:9;2984:7;2980:23;2976:32;2973:52;;;3021:1;3018;3011:12;2973:52;3044:29;3063:9;3044:29;:::i;:::-;3034:39;;3123:2;3112:9;3108:18;3095:32;3170:5;3163:13;3156:21;3149:5;3146:32;3136:60;;3192:1;3189;3182:12;3136:60;3215:5;3205:15;;;2879:347;;;;;:::o;3231:127::-;3292:10;3287:3;3283:20;3280:1;3273:31;3323:4;3320:1;3313:15;3347:4;3344:1;3337:15;3363:1138;3458:6;3466;3474;3482;3535:3;3523:9;3514:7;3510:23;3506:33;3503:53;;;3552:1;3549;3542:12;3503:53;3575:29;3594:9;3575:29;:::i;:::-;3565:39;;3623:38;3657:2;3646:9;3642:18;3623:38;:::i;:::-;3613:48;;3708:2;3697:9;3693:18;3680:32;3670:42;;3763:2;3752:9;3748:18;3735:32;3786:18;3827:2;3819:6;3816:14;3813:34;;;3843:1;3840;3833:12;3813:34;3881:6;3870:9;3866:22;3856:32;;3926:7;3919:4;3915:2;3911:13;3907:27;3897:55;;3948:1;3945;3938:12;3897:55;3984:2;3971:16;4006:2;4002;3999:10;3996:36;;;4012:18;;:::i;:::-;4087:2;4081:9;4055:2;4141:13;;-1:-1:-1;;4137:22:13;;;4161:2;4133:31;4129:40;4117:53;;;4185:18;;;4205:22;;;4182:46;4179:72;;;4231:18;;:::i;:::-;4271:10;4267:2;4260:22;4306:2;4298:6;4291:18;4346:7;4341:2;4336;4332;4328:11;4324:20;4321:33;4318:53;;;4367:1;4364;4357:12;4318:53;4423:2;4418;4414;4410:11;4405:2;4397:6;4393:15;4380:46;4468:1;4463:2;4458;4450:6;4446:15;4442:24;4435:35;4489:6;4479:16;;;;;;;3363:1138;;;;;;;:::o;4506:260::-;4574:6;4582;4635:2;4623:9;4614:7;4610:23;4606:32;4603:52;;;4651:1;4648;4641:12;4603:52;4674:29;4693:9;4674:29;:::i;:::-;4664:39;;4722:38;4756:2;4745:9;4741:18;4722:38;:::i;:::-;4712:48;;4506:260;;;;;:::o;4771:380::-;4850:1;4846:12;;;;4893;;;4914:61;;4968:4;4960:6;4956:17;4946:27;;4914:61;5021:2;5013:6;5010:14;4990:18;4987:38;4984:161;;;5067:10;5062:3;5058:20;5055:1;5048:31;5102:4;5099:1;5092:15;5130:4;5127:1;5120:15;4984:161;;4771:380;;;:::o;6396:413::-;6598:2;6580:21;;;6637:2;6617:18;;;6610:30;6676:34;6671:2;6656:18;;6649:62;-1:-1:-1;;;6742:2:13;6727:18;;6720:47;6799:3;6784:19;;6396:413::o;8407:470::-;8586:3;8624:6;8618:13;8640:53;8686:6;8681:3;8674:4;8666:6;8662:17;8640:53;:::i;:::-;8756:13;;8715:16;;;;8778:57;8756:13;8715:16;8812:4;8800:17;;8778:57;:::i;:::-;8851:20;;8407:470;-1:-1:-1;;;;8407:470:13:o;10110:127::-;10171:10;10166:3;10162:20;10159:1;10152:31;10202:4;10199:1;10192:15;10226:4;10223:1;10216:15;10242:125;10282:4;10310:1;10307;10304:8;10301:34;;;10315:18;;:::i;:::-;-1:-1:-1;10352:9:13;;10242:125::o;10372:128::-;10412:3;10443:1;10439:6;10436:1;10433:13;10430:39;;;10449:18;;:::i;:::-;-1:-1:-1;10485:9:13;;10372:128::o;10505:414::-;10707:2;10689:21;;;10746:2;10726:18;;;10719:30;10785:34;10780:2;10765:18;;10758:62;-1:-1:-1;;;10851:2:13;10836:18;;10829:48;10909:3;10894:19;;10505:414::o;11755:388::-;11960:2;11949:9;11942:21;11923:4;11980:45;12021:2;12010:9;12006:18;11998:6;11980:45;:::i;:::-;12056:2;12041:18;;12034:34;;;;-1:-1:-1;;;;;;12104:32:13;;;;12099:2;12084:18;;;12077:60;11972:53;11755:388;-1:-1:-1;11755:388:13:o;12148:317::-;12325:2;12314:9;12307:21;12288:4;12345:45;12386:2;12375:9;12371:18;12363:6;12345:45;:::i;:::-;12337:53;;12455:1;12451;12446:3;12442:11;12438:19;12430:6;12426:32;12421:2;12410:9;12406:18;12399:60;12148:317;;;;;:::o;12470:489::-;-1:-1:-1;;;;;12739:15:13;;;12721:34;;12791:15;;12786:2;12771:18;;12764:43;12838:2;12823:18;;12816:34;;;12886:3;12881:2;12866:18;;12859:31;;;12664:4;;12907:46;;12933:19;;12925:6;12907:46;:::i;:::-;12899:54;12470:489;-1:-1:-1;;;;;;12470:489:13:o;12964:249::-;13033:6;13086:2;13074:9;13065:7;13061:23;13057:32;13054:52;;;13102:1;13099;13092:12;13054:52;13134:9;13128:16;13153:30;13177:5;13153:30;:::i;13218:135::-;13257:3;-1:-1:-1;;13278:17:13;;13275:43;;;13298:18;;:::i;:::-;-1:-1:-1;13345:1:13;13334:13;;13218:135::o;13358:127::-;13419:10;13414:3;13410:20;13407:1;13400:31;13450:4;13447:1;13440:15;13474:4;13471:1;13464:15;13490:120;13530:1;13556;13546:35;;13561:18;;:::i;:::-;-1:-1:-1;13595:9:13;;13490:120::o;13615:112::-;13647:1;13673;13663:35;;13678:18;;:::i;:::-;-1:-1:-1;13712:9:13;;13615:112::o;13732:127::-;13793:10;13788:3;13784:20;13781:1;13774:31;13824:4;13821:1;13814:15;13848:4;13845:1;13838:15",
    "sourcePath": "/home/sprtd/Desktop/buildspace/NFT_proj/epic-nft/contracts/MyEpicNFT.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.8+commit.dddeac2f"
    },
    "ast": {
        "absolutePath": "/home/sprtd/Desktop/buildspace/NFT_proj/epic-nft/contracts/MyEpicNFT.sol",
        "exportedSymbols": {
            "Address": [
                1486
            ],
            "Context": [
                1508
            ],
            "Counters": [
                1582
            ],
            "ERC165": [
                1809
            ],
            "ERC721": [
                900
            ],
            "ERC721URIStorage": [
                1162
            ],
            "IERC165": [
                1821
            ],
            "IERC721": [
                1016
            ],
            "IERC721Metadata": [
                1189
            ],
            "IERC721Receiver": [
                1034
            ],
            "MyEpicNFT": [
                84
            ],
            "Strings": [
                1785
            ],
            "console": [
                9885
            ]
        },
        "id": 85,
        "license": "UNLICENSED",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "39:23:0"
            },
            {
                "absolutePath": "/home/sprtd/Desktop/buildspace/NFT_proj/epic-nft/node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
                "file": "/home/sprtd/Desktop/buildspace/NFT_proj/epic-nft/node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
                "id": 2,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 85,
                "sourceUnit": 1163,
                "src": "65:140:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/home/sprtd/Desktop/buildspace/NFT_proj/epic-nft/node_modules/@openzeppelin/contracts/utils/Counters.sol",
                "file": "/home/sprtd/Desktop/buildspace/NFT_proj/epic-nft/node_modules/@openzeppelin/contracts/utils/Counters.sol",
                "id": 3,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 85,
                "sourceUnit": 1583,
                "src": "206:114:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/home/sprtd/Desktop/buildspace/NFT_proj/epic-nft/node_modules/hardhat/console.sol",
                "file": "/home/sprtd/Desktop/buildspace/NFT_proj/epic-nft/node_modules/hardhat/console.sol",
                "id": 4,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 85,
                "sourceUnit": 9886,
                "src": "321:91:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 5,
                            "name": "ERC721URIStorage",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1162,
                            "src": "436:16:0"
                        },
                        "id": 6,
                        "nodeType": "InheritanceSpecifier",
                        "src": "436:16:0"
                    }
                ],
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 84,
                "linearizedBaseContracts": [
                    84,
                    1162,
                    900,
                    1189,
                    1016,
                    1809,
                    1821,
                    1508
                ],
                "name": "MyEpicNFT",
                "nameLocation": "423:9:0",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "id": 10,
                        "libraryName": {
                            "id": 7,
                            "name": "Counters",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1582,
                            "src": "463:8:0"
                        },
                        "nodeType": "UsingForDirective",
                        "src": "457:36:0",
                        "typeName": {
                            "id": 9,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 8,
                                "name": "Counters.Counter",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1514,
                                "src": "476:16:0"
                            },
                            "referencedDeclaration": 1514,
                            "src": "476:16:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$1514_storage_ptr",
                                "typeString": "struct Counters.Counter"
                            }
                        }
                    },
                    {
                        "constant": false,
                        "id": 13,
                        "mutability": "mutable",
                        "name": "_tokenIds",
                        "nameLocation": "521:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 84,
                        "src": "496:34:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Counter_$1514_storage",
                            "typeString": "struct Counters.Counter"
                        },
                        "typeName": {
                            "id": 12,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 11,
                                "name": "Counters.Counter",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1514,
                                "src": "496:16:0"
                            },
                            "referencedDeclaration": 1514,
                            "src": "496:16:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$1514_storage_ptr",
                                "typeString": "struct Counters.Counter"
                            }
                        },
                        "visibility": "private"
                    },
                    {
                        "body": {
                            "id": 26,
                            "nodeType": "Block",
                            "src": "579:35:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "hexValue": "4e46542068657265",
                                                "id": 23,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "597:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_b746753a9f54ce9922ebafada3f9ed3f166f5843e49a5d31acf3d6f894d84ac8",
                                                    "typeString": "literal_string \"NFT here\""
                                                },
                                                "value": "NFT here"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_stringliteral_b746753a9f54ce9922ebafada3f9ed3f166f5843e49a5d31acf3d6f894d84ac8",
                                                    "typeString": "literal_string \"NFT here\""
                                                }
                                            ],
                                            "expression": {
                                                "id": 20,
                                                "name": "console",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 9885,
                                                "src": "585:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_console_$9885_$",
                                                    "typeString": "type(library console)"
                                                }
                                            },
                                            "id": 22,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "log",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 2416,
                                            "src": "585:11:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (string memory) view"
                                            }
                                        },
                                        "id": 24,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "585:23:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 25,
                                    "nodeType": "ExpressionStatement",
                                    "src": "585:23:0"
                                }
                            ]
                        },
                        "id": 27,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "hexValue": "5371756172654e4654",
                                        "id": 16,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "556:11:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_16af594720600b9c6b1e1c4c7c18b1ce000371f7d37df7e48cfb0274c77788d8",
                                            "typeString": "literal_string \"SquareNFT\""
                                        },
                                        "value": "SquareNFT"
                                    },
                                    {
                                        "hexValue": "535155415245",
                                        "id": 17,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "569:8:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_78ba588f2f465c8b01da7a2ff2be79bf5685ed6c64ae2489cfdf5e38beaeba2d",
                                            "typeString": "literal_string \"SQUARE\""
                                        },
                                        "value": "SQUARE"
                                    }
                                ],
                                "id": 18,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 15,
                                    "name": "ERC721",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 900,
                                    "src": "549:6:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "549:29:0"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 14,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "546:2:0"
                        },
                        "returnParameters": {
                            "id": 19,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "579:0:0"
                        },
                        "scope": 84,
                        "src": "535:79:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 61,
                            "nodeType": "Block",
                            "src": "650:244:0",
                            "statements": [
                                {
                                    "assignments": [
                                        31
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 31,
                                            "mutability": "mutable",
                                            "name": "newItemId",
                                            "nameLocation": "664:9:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 61,
                                            "src": "656:17:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 30,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "656:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 35,
                                    "initialValue": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "expression": {
                                                "id": 32,
                                                "name": "_tokenIds",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 13,
                                                "src": "676:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Counter_$1514_storage",
                                                    "typeString": "struct Counters.Counter storage ref"
                                                }
                                            },
                                            "id": 33,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "current",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1526,
                                            "src": "676:17:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1514_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1514_storage_ptr_$",
                                                "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                                            }
                                        },
                                        "id": 34,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "676:19:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "656:39:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 37,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "711:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 38,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "711:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 39,
                                                "name": "newItemId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 31,
                                                "src": "723:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 36,
                                            "name": "_safeMint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                596,
                                                625
                                            ],
                                            "referencedDeclaration": 596,
                                            "src": "701:9:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 40,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "701:32:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 41,
                                    "nodeType": "ExpressionStatement",
                                    "src": "701:32:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 43,
                                                "name": "newItemId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 31,
                                                "src": "752:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            {
                                                "hexValue": "68747470733a2f2f6a736f6e6b65657065722e636f6d2f622f39523445",
                                                "id": 44,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "763:31:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_b164332f85a17bf7349d620ba37adf7eef58ffe134c2b7713ac9267f70e07b37",
                                                    "typeString": "literal_string \"https://jsonkeeper.com/b/9R4E\""
                                                },
                                                "value": "https://jsonkeeper.com/b/9R4E"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_b164332f85a17bf7349d620ba37adf7eef58ffe134c2b7713ac9267f70e07b37",
                                                    "typeString": "literal_string \"https://jsonkeeper.com/b/9R4E\""
                                                }
                                            ],
                                            "id": 42,
                                            "name": "_setTokenURI",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1131,
                                            "src": "739:12:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (uint256,string memory)"
                                            }
                                        },
                                        "id": 45,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "739:56:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 46,
                                    "nodeType": "ExpressionStatement",
                                    "src": "739:56:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "hexValue": "4e4654206964202573206d696e746564206279202573",
                                                "id": 50,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "813:24:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_eb7d349c51f5057e821ccf4cf7b7f4a235454b2cfdaa222e71f425a51b53f3a3",
                                                    "typeString": "literal_string \"NFT id %s minted by %s\""
                                                },
                                                "value": "NFT id %s minted by %s"
                                            },
                                            {
                                                "id": 51,
                                                "name": "newItemId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 31,
                                                "src": "839:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            {
                                                "expression": {
                                                    "id": 52,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "850:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 53,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "850:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_stringliteral_eb7d349c51f5057e821ccf4cf7b7f4a235454b2cfdaa222e71f425a51b53f3a3",
                                                    "typeString": "literal_string \"NFT id %s minted by %s\""
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "expression": {
                                                "id": 47,
                                                "name": "console",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 9885,
                                                "src": "801:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_console_$9885_$",
                                                    "typeString": "type(library console)"
                                                }
                                            },
                                            "id": 49,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "log",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 3116,
                                            "src": "801:11:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$__$",
                                                "typeString": "function (string memory,uint256,address) view"
                                            }
                                        },
                                        "id": 54,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "801:60:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 55,
                                    "nodeType": "ExpressionStatement",
                                    "src": "801:60:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "expression": {
                                                "id": 56,
                                                "name": "_tokenIds",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 13,
                                                "src": "867:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Counter_$1514_storage",
                                                    "typeString": "struct Counters.Counter storage ref"
                                                }
                                            },
                                            "id": 58,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "increment",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1540,
                                            "src": "867:19:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1514_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1514_storage_ptr_$",
                                                "typeString": "function (struct Counters.Counter storage pointer)"
                                            }
                                        },
                                        "id": 59,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "867:21:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 60,
                                    "nodeType": "ExpressionStatement",
                                    "src": "867:21:0"
                                }
                            ]
                        },
                        "functionSelector": "de9d132f",
                        "id": 62,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "makeAnEpicNFT",
                        "nameLocation": "627:13:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 28,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "640:2:0"
                        },
                        "returnParameters": {
                            "id": 29,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "650:0:0"
                        },
                        "scope": 84,
                        "src": "618:276:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 82,
                            "nodeType": "Block",
                            "src": "975:88:0",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 73,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 69,
                                            "name": "tokenOwner",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 67,
                                            "src": "981:10:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [
                                                {
                                                    "id": 71,
                                                    "name": "_tokenId",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 64,
                                                    "src": "1002:8:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                ],
                                                "id": 70,
                                                "name": "ownerOf",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 230,
                                                "src": "994:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                                    "typeString": "function (uint256) view returns (address)"
                                                }
                                            },
                                            "id": 72,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "994:17:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "981:30:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "id": 74,
                                    "nodeType": "ExpressionStatement",
                                    "src": "981:30:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "hexValue": "257320746f6b656e206f776e6572",
                                                "id": 78,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1029:16:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_46e573d078e992ff9874550910e9c1e2b46ade2ca7727d19387085fe4facc837",
                                                    "typeString": "literal_string \"%s token owner\""
                                                },
                                                "value": "%s token owner"
                                            },
                                            {
                                                "id": 79,
                                                "name": "tokenOwner",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 67,
                                                "src": "1047:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_stringliteral_46e573d078e992ff9874550910e9c1e2b46ade2ca7727d19387085fe4facc837",
                                                    "typeString": "literal_string \"%s token owner\""
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "expression": {
                                                "id": 75,
                                                "name": "console",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 9885,
                                                "src": "1017:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_console_$9885_$",
                                                    "typeString": "type(library console)"
                                                }
                                            },
                                            "id": 77,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "log",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 2580,
                                            "src": "1017:11:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                                                "typeString": "function (string memory,address) view"
                                            }
                                        },
                                        "id": 80,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1017:41:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 81,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1017:41:0"
                                }
                            ]
                        },
                        "functionSelector": "deaea2e3",
                        "id": 83,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getNFTOwner",
                        "nameLocation": "908:11:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 65,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 64,
                                    "mutability": "mutable",
                                    "name": "_tokenId",
                                    "nameLocation": "925:8:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 83,
                                    "src": "920:13:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 63,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "920:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "919:15:0"
                        },
                        "returnParameters": {
                            "id": 68,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 67,
                                    "mutability": "mutable",
                                    "name": "tokenOwner",
                                    "nameLocation": "963:10:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 83,
                                    "src": "955:18:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 66,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "955:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "954:20:0"
                        },
                        "scope": 84,
                        "src": "899:164:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 85,
                "src": "414:653:0",
                "usedErrors": []
            }
        ],
        "src": "39:1028:0"
    },
    "functionHashes": {
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "getApproved(uint256)": "081812fc",
        "getNFTOwner(uint256)": "deaea2e3",
        "isApprovedForAll(address,address)": "e985e9c5",
        "makeAnEpicNFT()": "de9d132f",
        "name()": "06fdde03",
        "ownerOf(uint256)": "6352211e",
        "safeTransferFrom(address,address,uint256)": "42842e0e",
        "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
        "setApprovalForAll(address,bool)": "a22cb465",
        "supportsInterface(bytes4)": "01ffc9a7",
        "symbol()": "95d89b41",
        "tokenURI(uint256)": "c87b56dd",
        "transferFrom(address,address,uint256)": "23b872dd"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "1265600",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "approve(address,uint256)": "infinite",
            "balanceOf(address)": "2612",
            "getApproved(uint256)": "4799",
            "getNFTOwner(uint256)": "infinite",
            "isApprovedForAll(address,address)": "infinite",
            "makeAnEpicNFT()": "infinite",
            "name()": "infinite",
            "ownerOf(uint256)": "2645",
            "safeTransferFrom(address,address,uint256)": "infinite",
            "safeTransferFrom(address,address,uint256,bytes)": "infinite",
            "setApprovalForAll(address,bool)": "26695",
            "supportsInterface(bytes4)": "534",
            "symbol()": "infinite",
            "tokenURI(uint256)": "infinite",
            "transferFrom(address,address,uint256)": "infinite"
        }
    }
}